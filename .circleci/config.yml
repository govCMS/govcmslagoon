version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: integratedexperts/circleci2-builder
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSE_PROJECT_NAME: govcmslagoon
    steps:
      - checkout
      - run:
          name: Docker-compose validate
          command: docker-compose config -q
      - run:
          name: Update codebase to follow CI configuration
          command: |
            sed -i -e "/###/d" docker-compose.yml
            cp .env.default .env
      - setup_remote_docker
      - run:
          name: Start amazeeio-network
          command: docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
      - run:
          name: Build project
          command: |
            ahoy -v build
            docker-compose exec test dockerize -wait tcp://mariadb:3306 -timeout 1m
      - run:
          name: Run tests for containers
          command: ./tests/goss/run_all.sh
      - run:
          name: Install site
          command: ahoy -v install -- install_configure_form.update_status_module='array(FALSE,FALSE)'
      - run:
          name: Get site and module version status
          command: |
            ahoy drush st
            ahoy drush pml
      - run:
          name: Test Redis is functional
          command: |
            # Set ENABLE_REDIS env var and warm cache with bootstrap.
            docker-compose exec -T --env ENABLE_REDIS=true cli drush status
            redisKeys=$(docker-compose exec -T redis redis-cli KEYS '*'|wc -l)
            if [[ $redisKeys -le 1 ]];  then
              echo "Redis fail: No valid cache keys."
              exit 1
            else
              echo "Redis success: Redis contains $redisKeys keys."
            fi
workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
